已完成:
    游戏管理 -> todo 游戏服务端自己redis存储游戏状态
    公告管理 -> todo 同客户端对接; 添加公告, 点击走马灯弹出选择时间;

1.24 提升技术!!

    运营管理后端搞定
    客服管理搞定



---------
管理员功能参照原后台搞定

---------
    后台迁移功能的前端页面搞定; el-table 修改 改为 直接在表内修改;
    mysql(已搞定) 和redis 不同库解决
    分页: todo 如果要做分页, 会用到总数量, 把sql作为数据源, 可以避免写两次sql, 如: select * from sql; select count(id) from sql;

    todo 查询条件account:
        查询都去掉用户账号, 用userId; 原后台 玩家金豆变化记录 同时输入userId和account时, 还用account再去middle server查userId, 好蛋疼的设定和操作
        根据account获取userId是, 玩家订单查询在CASINOUSERDB_xx.CASINOUSER_xx表中获取, 玩家金豆变化记录通过middleserver获取, 好乱啊
        完美: 当userId为空, account不为空时, 根据account获取db和table index, 然后获取userId且limit 1, 同服务端确认一个account貌似是对应多个userId;

        middleServer操作的必要性, 比如通过account获取userId, 原始后台就有不通过和通过middleServer获取两种方式, 如果必要, 统一封装处理

        前端传来的订单状态如果有0, svc中判断不能用empty

        后台所有更新操作日志记录管理员, 日志不要存到temp中

        提示跟以前一样, 比如 提现支付宝管理 - 开启总闸 时 弹出提示





---------
    no data 如果是正在加载 改为 loading,
    首页
    推广管理回头看哪些没做
    金豆改为金币?

-------
    new_admin中的表放入db_smc中
    todo 改为不用npm安装, 部署文档




----------
首页
页面登录权限
用户黑名单
分页
默认排序错误

----
    用户管理搞定
    财务管理搞定, 首页 -> todo 在用的渠道有哪些; 配置文件名字修改; 库1和库2; 调通;
    首页搞定
    投注记录 每局怎么玩的跟以前一样要有
    登录 - 其他页面权限




前端验证补全
其他比如推广的未开放
投注记录放入用户管理


    外网nginx和php-fpm随系统启动
    request.js 确定login中自己会根据res.code判断是否登录成功


--------
数据库主从分离; 原后台看出他们是这么搞的;
========
疑问:
    为何game.js定义的方法里打印ret为空

待解决 -

    __LINE__效率

    nginx是否需要ob_flush()后flush(), ob_flush()和exit()的搭配

    为了效率不用require/include(_once), 自己保证require/include不重复

    实践curl设置项含义

    使用require代替require_once

    js请求发送数组参数





